digraph "DammPlotIds.hpp"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="DammPlotIds.hpp",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="TraceExtractor.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d3f/_trace_extractor_8hpp.html",tooltip="Header file for the TraceExtractor class. "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="TraceExtractor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/de5/_trace_extractor_8cpp.html",tooltip="Extract traces for a specific type and subtype. "];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="DetectorDriverXmlParser.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d67/_detector_driver_xml_parser_8cpp.html",tooltip="Class to parse the DetectorDriver node. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="TraceAnalyzer.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/da6/_trace_analyzer_8cpp.html",tooltip="defines the Trace class. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="TraceFilterAnalyzer.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d16/_trace_filter_analyzer_8cpp.html",tooltip="Implements the analysis of traces using trapezoidal filters. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="WaaAnalyzer.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d52/_waa_analyzer_8cpp.html",tooltip="Obtains the phase of a waveform using a weighted average algorithm. "];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="Correlator.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dc9/_correlator_8hpp.html",tooltip="Header file for correlation. "];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Correlator.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d79/_correlator_8cpp.html",tooltip="Correlates events. "];
  Node8 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ImplantSsdProcessor.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d7f/_implant_ssd_processor_8hpp.html",tooltip="Header file for an SSD detector for implantation and correlation. "];
  Node10 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ImplantSsdProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d43/_implant_ssd_processor_8cpp.html",tooltip="Handles ssd:implant detectors. "];
  Node8 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="DssdProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d0b/_dssd_processor_8cpp.html",tooltip="Processes DSSD events. "];
  Node8 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="DetectorDriver.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/df5/_detector_driver_8cpp.html",tooltip="Main driver for event processing. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="UtkUnpacker.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d40/_utk_unpacker_8cpp.html",tooltip="A child of the Unpacker class that is used to replace some of the functionality of the PixieStd..."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Anl1471Processor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/df5/_anl1471_processor_8cpp.html",tooltip="A class to process data from ANL1471 experiment using VANDLE. "];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Beta4Hen3Processor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/df6/_beta4_hen3_processor_8cpp.html"];
  Node1 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="CrosstalkProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d45/_crosstalk_processor_8cpp.html",tooltip="A Template processor class that can be used to build your own. "];
  Node1 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="Dssd4SHEProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8f/_dssd4_s_h_e_processor_8cpp.html"];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="E11027Processor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d8b/_e11027_processor_8cpp.html",tooltip="Class that handles outputting MONA-LISA-SWEEPER timestamps from the E11027 experiment conducted at NS..."];
  Node1 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="Ge4Hen3Processor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d18/_ge4_hen3_processor_8cpp.html"];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="IS600Processor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/dbf/_i_s600_processor_8cpp.html",tooltip="A class to process data from ISOLDE 599 and 600 experiments using VANDLE. "];
  Node1 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="LaBr3TestProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d5d/_la_br3_test_processor_8cpp.html",tooltip="A LaBr3Test processor class that can be used to build your own. "];
  Node1 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="TemplateExpProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/dd7/_template_exp_processor_8cpp.html",tooltip="Example class for experiment specific setups. "];
  Node1 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="TwoChanTimingProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/da5/_two_chan_timing_processor_8cpp.html",tooltip="Analyzes data from a simple Two channel Timing setup. "];
  Node1 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="VandleOrnl2012Processor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/dc0/_vandle_ornl2012_processor_8cpp.html",tooltip="A class to process data from the LeRIBSS 2012 campaign. "];
  Node1 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="WalkVandleBetaProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d74/_walk_vandle_beta_processor_8cpp.html",tooltip="A class to determine the walk between Vandle and the LeRIBSS betas. "];
  Node1 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="BetaScintProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d37/_beta_scint_processor_8cpp.html"];
  Node1 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="CloverCalibProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d1e/_clover_calib_processor_8cpp.html"];
  Node1 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="CloverProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d91/_clover_processor_8cpp.html",tooltip="Implementation for germanium processor. "];
  Node1 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="DoubleBetaProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d1f/_double_beta_processor_8cpp.html",tooltip="A DoubleBeta processor class that can be used to analyze double beta detectors. "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="GeProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d64/_ge_processor_8cpp.html",tooltip="Implementation for germanium processor. "];
  Node1 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="Hen3Processor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/d49/_hen3_processor_8cpp.html"];
  Node1 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="IonChamberProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d01/_ion_chamber_processor_8cpp.html",tooltip="implementation for ion chambers "];
  Node1 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="LiquidScintProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d61/_liquid_scint_processor_8cpp.html"];
  Node1 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="LitePositionProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/deb/_lite_position_processor_8cpp.html",tooltip="Handle some QDC action to determine positions in a strip detector. "];
  Node1 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="LogicProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d5f/_logic_processor_8cpp.html",tooltip="handling of logic events, derived from MtcProcessor.cpp "];
  Node1 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="McpProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d74/_mcp_processor_8cpp.html",tooltip="Handles MCP detectors. "];
  Node1 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="NeutronScintProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/df3/_neutron_scint_processor_8cpp.html"];
  Node1 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="PositionProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d4d/_position_processor_8cpp.html",tooltip="Handle some QDC action to determine positions in a strip detector. "];
  Node1 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="PspmtProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d1b/_pspmt_processor_8cpp.html"];
  Node1 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="TeenyVandleProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dbb/_teeny_vandle_processor_8cpp.html",tooltip="A Template processor class that can be used to build your own. "];
  Node1 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="TemplateProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d27/_template_processor_8cpp.html",tooltip="A Template processor class that can be used to build your own. "];
  Node1 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="VandleProcessor.cpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d7f/_vandle_processor_8cpp.html",tooltip="Processes information for VANDLE. "];
}
